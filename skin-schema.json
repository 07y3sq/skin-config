{
  "type" : "object",
  "additionalProperties" : false,
  "required": ["localizableStrings"],
  "properties" : {
    "startScreen" : {
      "type" : "object",
      "properties" : {
        "playIconStyle" : {
          "description" : "Default color is white with an opacity of 1",
          "$ref" : "#/definitions/iconStyle"
        },
        "promoImageSize" : { "enum" : ["default", "small"] },
        "showPlayButton" : { "type" : "boolean" },
        "playButtonPosition" : {
          "enum" : [ "center", "topLeft", "topRight", "bottomLeft", "bottomRight" ]
        },
        "showTitle" : { "type" : "boolean" },
        "showDescription" : { "type" : "boolean" },
        "titleFont" : {
          "description" : "The font of the title",
          "$ref" : "#/definitions/fontStyle"
        },
        "descriptionFont" : {
          "description" : "The font of the description",
          "$ref" : "#/definitions/fontStyle"
        },
        "infoPanelPosition" : {
          "enum" : [ "topLeft", "topRight", "bottomLeft", "bottomRight" ]
        },
        "showPromo": { "type" : "boolean" }
      }
    },
    "pauseScreen" : {
      "type" : "object",
      "properties" : {
        "pauseIconStyle" : {
          "description" : "Default color is white with an opacity of 1",
          "$ref" : "#/definitions/iconStyle" },
        "screenToShowOnPause" : { "enum" : ["default", "discovery"] },
        "showPauseIcon" : { "type" : "boolean" },
        "pauseIconPosition" : {
          "enum" : [ "center", "topLeft", "topRight", "bottomLeft", "bottomRight" ]
        },
        "showTitle" : { "type" : "boolean" },
        "showDescription" : { "type" : "boolean" },
        "infoPanelPosition" : {
          "enum" : [ "topLeft", "topRight", "bottomLeft", "bottomRight" ]
        }
      }
    },
    "endScreen" : {
      "type" : "object",
      "properties" : {
        "replayIconStyle" : {
          "description" : "Default color is white with an opacity of 1",
          "$ref" : "#/definitions/iconStyle"
        },
        "screenToShowOnEnd" : { "enum" : ["default", "discovery"] },
        "showReplayButton" : { "type" : "boolean" },
        "showTitle" : { "type" : "boolean" },
        "showDescription" : { "type" : "boolean" }
      }
    },
    "controlBar" : {
      "description" : "The playback control bar. Generally contains a play-pause button, scrubber control, etc.",
      "type" : "object",
      "properties" : {
        "iconStyle" : {
          "description" : "Default color is #8E8E8E with an opacity of 1",
          "$ref" : "#/definitions/iconStyle"
        },
        "autoHide" : { "type" : "boolean" },
        "items" : {
          "description" : "The list of buttons to (maximally) show, in left-to-right order. For watermark, we recommend 30px height and less then 120px width for desktop, (??? for mobile), which is the default size for OOYALA logo.",
          "type" : "array",
          "items" : { "$ref" : "#/definitions/button" }
        },
        "watermark": {
          "type": "object",
          "additionalProperties" : false,
          "properties": {
            "imageResource" : { "$ref" : "#/definitions/image" },
            "width": {"type" : "number"},
            "height": {"type" : "number"}
          }
        }
      }
    },
    "sharing": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties" : false,
        "properties": {
          "buttonName": { "type": "string" },
          "imageResource" : { "$ref" : "#/definitions/image" }
        }
      }
    },
    "general": {
      "type": "object",
      "properties": {
        "watermark": {
          "type": "object",
          "additionalProperties" : false,
          "properties" : {
            "imageResource" : { "$ref" : "#/definitions/image" }
          }
        }
      }
    },
    "upNextScreen" : {
      "type" : "object",
      "properties" : {
        "showUpNext" : { "type" : "boolean" },
        "timeToShow": {
          "type" : "string",
          "pattern": "^[0-9]+$|^[0-9]{1,2}%$"
        }
      }
    },
    "moreOptions": {
      "type": "object",
      "properties": {
        "iconStyle" : {
          "description" : "Default color is white with an opacity of 1",
          "$ref" : "#/definitions/iconStyle"
        },
        "brightOpacitiy": {"type": "number"},
        "darkOpacity": {"type": "number"},
        "iconSize": {"type": "number"},
        "color": {"type": "string"},
        "buttons": {
          "type": "array",
          "items": {
            // TODO: change to using the button schema, like the control bar items.
            "enum" : ["discovery", "quality", "closedCaption", "share", "settings"]
          }
        }
      }            
    },
    "discoveryScreen" : {
      "type" : "object",
      "properties" : {
        "panelTitle" : { 
          "type" : "object",
          "additionalProperties" : false,
          "required" : [ "text", "imageResource", "showImage" ],
          "properties" : {
            "text" : { "type": "string" },
            "imageResource" : { "$ref" : "#/definitions/image" },
            "showImage" : { "type" : "boolean" }
          }
        },
        "titleFont" : {
          "description" : "The font of the title",
          "$ref" : "#/definitions/fontStyle"
        },
        "showContentTitle" : {"type" : "boolean"},
        "showContentDuration": {"type" : "boolean"}
      }
    },
    "ccOptions" : {
      "type" : "object",
      "properties" : {
        "defaultEnabled" : { "type" : "boolean" },
        "defaultLanguage" : { "type" : "string" }
      }
    },
    "icons" : {
      "description" : "The set of all required icons, for redering all the various buttons' states. Note that this is the superset of all icons needed by versions of the player (i.e. web vs. apps)",
      "type" : "object",
      "patternProperties" : { "" : { "$ref" : "#/definitions/icon" } },
      "required" : ["play", "pause", "volumeDown", "volumeUp", "volumeOff", "expand", "compress", "ellipsis", "replay", "share", "cc", "discovery", "quality", "setting", "dismiss", "toggleOff", "toggleOn" ]
    },
    "localizableStrings" : {
      "description": "all the languages listed in the array should have a separate json file included in the bundle to make localization work",
      "type" : "object",
      "properties": {
        "default" : {"type" : "string", "pattern" : "^[a-z]{2}$"},
        "languages" : {
          "type": "array",
          "items": {"type": "string", "pattern": "^[a-z]{2}$"}
        }
      },
      "required" : ["default"] 
    }
  },
  "definitions": {
    "image" : {
      "description" : "Specify how to obtain an image's data. Desktop will use the url. Mobile will first lookup the native resource, with fall back to the url.",
      "type" : "object",
      "additionalProperties" : false,
      "minProperties" : 1,
      "properties" : {
        "url" : { "type" : "string" },
        "ios-resource" : { "type" : "string" },
        "android-resource" : { "type" : "string" }
      }
    },
    "button" : {
      "description" : "Specify a button that appears in the user interface.",
      "type" : "object",
      "required" : ["name", "collapsable", "webMinWidth", "sdkMinWidth"],
      "additionalProperties" : false,
      "properties" : {
        "name" : {
          "description" : "These are the currently supported buttons. Each implementation in JavaScript knows how to render itself.",
          "enum" : ["playPause", "volume", "timeDuration", "flexibleSpace", "discovery", "fullscreen", "moreOptions", "watermark", "share", "closedCaption", "bitrateSelector", "quality"]
        },
        "collapsable" : {
          "description" : "True: the button can disappear when the screen real estate is too small.",
          "type" : "boolean"
        },
        "webMinWidth" : {
          "description" : "For Web (e.g. HTML5) players. If the button doesn't have this much room, and 'collapsable' is true then the button becomes hidden.",
          "type" : "number"
        },
        "sdkMinWidth" : {
          "description" : "For Mobile SDK App (i.e. Android, iOS) players. If the button doesn't have this much room, and 'collapsable' is true then the button becomes hidden.",
          "type" : "number"
        }          
      }
    },
    "icon" : {
      "description" : "Icons are renderable from fonts. Bitmaps are not supported.",
      "type" : "object",
      "required" : ["fontFamilyName", "fontString"],
      "additionalProperties" : false,
      "properties" : {
        "fontFamilyName" : {
          "description" : "The name of the font family to use.",
          "type" : "string"
        },
        "fontString" : {
          "description" : "The string used for displaying the icon. (Usually a single Unicode code point.)",
          "type" : "string"
        }
      }
    },
    "iconStyle" : {
      "description" : "A collection of styles that can be used by icon renderings throughout the UI. Any value placed in here gets directly parsed as a react stylesheet. Supported style customizations are color, opacity, shadowColor, shadowOffset, shadowOpacity, shadowRadius, borderColor, borderRadius, and borderStyle. See React stylesheets for more specifics on each field. All values are optional, and have defaults specified in the code depending on the section. See each section for default values.",
      "type" : "object",
      "additionalProperties" : false,
      "properties" : {
        "color" : {
          "type" : "string"
        },
        "opacity" : {
          "type" : "number"
        },
        "shadowColor" : {
          "type" : "string"
        },
        "shadowOffset" : {
          "type" : "object",
          "properties" : {
            "width" : {"type" : "number"},
            "height" : {"type" : "number"}
          }
        },
        "shadowOpacity" : {
          "type" : "number"
        },
        "shadowRadius" : {
          "type" : "number"
        },
        "borderColor" : {
          "type" : "string"
        },
        "borderRadius" : {
          "type" : "number"
        },
        "borderWidth" : {
          "type" : "number"
        },
        "borderStyle" : {
          "type" : "string",
          "enum" : ["solid", "dotted", "dashed"]
        }
      }
    },
    "fontStyle" : {
      "description" : "A collection of styles that can be used by font renderings throughout the UI. Any value placed in here gets directly parsed as a react stylesheet. Supported style customizations are color, fontFamily, weight, fontSize. See React stylesheets for more specifics on each field. All values are optional, and have defaults specified in the code depending on the section. See each section for default values.",
      "type": "object",
      "additionalProperties" : false,
      "properties" : {
        "fontFamily": {"type" : "string"},
        "color": {"type" : "string"},
        "weight": {"type" : "string"},
        "fontSize": {"type" : "number"}
      }
    }
  }
}
